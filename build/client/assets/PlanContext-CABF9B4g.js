import{j as h}from"./jsx-runtime-DlxonYWr.js";import{r as n}from"./index-DL0tHwE6.js";const d=n.createContext(null),s={starter:{id:"starter",name:"Standard",monthlyPrice:4.99,yearlyPrice:39.99,campaignLimit:20,features:["Show on specific pages","Up to 500 Spins/Month","Basic Analytics","Email Support","20 Campaign"],popular:!1},lite:{id:"lite",name:"Lite",monthlyPrice:4.99,yearlyPrice:49.99,campaignLimit:5,features:["Upto 300 impressions","Multiple campaigns","Show on specific pages","A/B testing","Conversion Booster"],popular:!0},premium:{id:"premium",name:"Premium",monthlyPrice:40,yearlyPrice:400,campaignLimit:20,features:["Upto 300 impressions","Multiple campaigns","Show on specific pages","A/B testing","Conversion Booster","Priority Support","Custom Branding"],popular:!1}};function y({children:l,initialDiscountCodes:r=[]}){const[t,i]=n.useState(()=>{if(typeof window<"u")try{const e=localStorage.getItem("GLOBAL_DISCOUNT_CODES");if(e){const o=JSON.parse(e);if(o&&o.length>0)return console.log("PlanProvider - Using localStorage discount codes:",o.length),o}}catch(e){console.error("Error parsing stored discount codes:",e)}return typeof window<"u"&&window.GLOBAL_DISCOUNT_CODES&&window.GLOBAL_DISCOUNT_CODES.length>0?(console.log("PlanProvider - Using global discount codes:",window.GLOBAL_DISCOUNT_CODES.length),window.GLOBAL_DISCOUNT_CODES):(console.log("PlanProvider - Using initial discount codes:",r),r)});console.log("PlanProvider initialized with discount codes:",t),n.useEffect(()=>{if(t.length===0){if(typeof window<"u"){try{const e=localStorage.getItem("GLOBAL_DISCOUNT_CODES");if(e){const o=JSON.parse(e);if(o&&o.length>0){console.log("PlanProvider - Updating from localStorage:",o.length),i(o);return}}}catch(e){console.error("Error parsing stored discount codes:",e)}if(window.GLOBAL_DISCOUNT_CODES&&window.GLOBAL_DISCOUNT_CODES.length>0){console.log("PlanProvider - Updating from global:",window.GLOBAL_DISCOUNT_CODES.length),i(window.GLOBAL_DISCOUNT_CODES);return}}r&&r.length>0&&(console.log("PlanProvider - Updating from initial props:",r.length),i(r))}},[r,t.length]);const u=async()=>{try{console.log("PlanProvider - Fetching discount codes from API...");const e=await fetch("/api/discount-codes");if(!e.ok)throw new Error(`Failed to fetch discount codes: ${e.statusText}`);const o=await e.json();if(o.success&&o.codes&&o.codes.length>0){if(console.log("PlanProvider - Successfully fetched codes:",o.codes),i(o.codes),typeof window<"u"){window.GLOBAL_DISCOUNT_CODES=o.codes;try{localStorage.setItem("GLOBAL_DISCOUNT_CODES",JSON.stringify(o.codes))}catch(w){console.error("Failed to store discount codes in localStorage:",w)}}return o.codes}else{if(t.length>0)return console.log("PlanProvider - API returned no codes, using existing codes:",t.length),t;throw new Error(o.error||"No discount codes available")}}catch(e){if(console.error("PlanProvider - Error fetching discount codes:",e),t.length>0)return console.log("PlanProvider - Fetch failed, using existing codes:",t.length),t;throw e}},[c,g]=n.useState(()=>{if(typeof window<"u"){const e=localStorage.getItem("currentPlan");return e?JSON.parse(e):s.starter}return s.starter}),[a,f]=n.useState(()=>typeof window<"u"&&localStorage.getItem("billingCycle")||"monthly");n.useEffect(()=>{typeof window<"u"&&localStorage.setItem("currentPlan",JSON.stringify(c))},[c]),n.useEffect(()=>{typeof window<"u"&&localStorage.setItem("billingCycle",a)},[a]);const p=e=>s[e]?(g(s[e]),!0):!1,S=e=>e==="monthly"||e==="yearly"?(f(e),!0):!1,P=()=>Object.values(s),m=e=>e<c.campaignLimit;return h.jsx(d.Provider,{value:{currentPlan:c,billingCycle:a,changePlan:p,changeBillingCycle:S,getPlans:P,canCreateCampaign:m,discountCodes:t,setDiscountCodes:i,fetchAndSetDiscountCodes:u,PLANS:s},children:l})}function L(){const l=n.useContext(d);if(!l)throw new Error("usePlan must be used within a PlanProvider");return l}export{y as P,L as u};
